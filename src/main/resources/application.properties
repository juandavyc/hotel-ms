spring.datasource.url=jdbc:h2:mem:bookingdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
server.port=8080

spring.application.name=hotels

spring.profiles.active=dev

spring.config.import=optional:configserver:http://localhost:8085


# register in eureka
eureka.instance.preferIpAddress=true
# url of eureka server
eureka.client.serviceUrl.defaultZone=http://localhost:8065/eureka

# environment vars

info.app.name=Hotels microservices
info.app.description=Application for reserve a room
info.app.version=1.0.0

# actuator
# expose all endpoints
management.endpoints.web.exposure.include=*
# show environment vars
management.info.env.enabled=true

#circuitbreaker

resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
#
resilience4j.circuitbreaker.instances.searchHotelByIdSupportCB.minimumNumberOfCalls=7
# en cuantos fallos empiece activarce cb
resilience4j.circuitbreaker.instances.searchHotelByIdSupportCB.failureRateThreshold=50
# va a durar 20 segundos donde no va a permitir mas llamadas
resilience4j.circuitbreaker.instances.searchHotelByIdSupportCB.waitDurationInOpenState=20000
# cuantas llamadas en estado semi abierto
resilience4j.circuitbreaker.instances.searchHotelByIdSupportCB.permittedNumberOfCallsInHalfOpenState=3

# retry pattern
#resilience4j.retry.instances.searchHotelByIdSupportRetry.maxAttempts=3
#resilience4j.retry.instances.searchHotelByIdSupportRetry.waitDuration=1500

management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]